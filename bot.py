import config
import telebot
from telebot import types

import random
import demoji
import pyowm

# –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Ä–∞–±–æ–∞—Ç—å –Ω–∞ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ - –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞ –ø–æ—á—Ç—É
# If you want to work on the full version of the bot - write me an email
# pv-chernov2000@yandex.ru  or  pv.chernov2000@gmal.com

bot = telebot.TeleBot(config.token)

owm = pyowm.OWM('—Ç–æ–∫–µ–Ω —Å —Å–∞–π—Ç–∞ https://openweathermap.org', language="ru")
demoji.download_codes()


path = 'Path_to_your_stickers'


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
@bot.message_handler(commands=['go', 'start'])
def welcome(message):
    sti = open(path+'stiker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    item3 = types.KeyboardButton("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è üåè")
    item2 = types.KeyboardButton("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üçî")
    item1 = types.KeyboardButton('–û –Ω–∞—Å üéØ')

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã Projector –≤ –ù–ì–¢–£, "
                     "—Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, "
                     "—á—Ç–æ–±—ã –ø–æ–º–æ—á—å –í–∞–º –≤–ª–∏—Ç—å—Å—è –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É,"
                     "–ø—Ä–æ—Å—Ç–æ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –æ –Ω–∞—Å –∏–ª–∏ –∂–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –∏ –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è.\n\n"
                     "<i>Have a nice time</i>üåà".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã—Ö–æ–¥–∞
@bot.message_handler(commands=['stop'])
def bye(message):
    bye_Sti = open(path+'byeMorty.tgs', 'rb')

    hideBoard = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id,
                     "–î–æ—Å–≤–∏–¥–∞–Ω–∏—è, {0.first_name}!\n–ú—ã, –∫–æ–º–∞–Ω–¥–∞ <b>{1.first_name}</b>, –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —Ç—ã —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ–ª(–∞) –≤—Ä–µ–º—è üåà‚ú®\n\n"
                     "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –≤ <a href='https://vk.com/projector_neti'>vk</a>\n"
                     "–ù–∞—à <a href='https://instagram.com/projector_neti'>inst</a>\n\n"
                     "–ù–∞–ø–∏—à–∏ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É –ø—Ä–æ–µ–∫—Ç–æ–≤ (<a href='https://vk.com/nikyats'>–ù–∏–∫–∏—Ç–µ –Ø—Ü–∏—é</a>) –∏ –∑–∞–¥–∞–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –ø–æ <i>–ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</i>\n\n"
                     "–ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç—è—Ç –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ üí´\n\n"
                     "<u>Don't be ill and have a nice day</u> ü¶†\n\n\n"
                     "P.S.: –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –±–æ—Ç—É, —Ç–æ –Ω–∞–ø–∏—à–∏ <a href='https://vk.com/setmyaddresspls'>–º–Ω–µ</a>".format(
                         message.from_user, bot.get_me()), parse_mode='html', reply_markup=hideBoard)
    exit()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤
@bot.message_handler(content_types=["sticker"])
def my_send_sticker(message):
    sti_1 = open(path+'AnimatedSticker.tgs', 'rb')
    sti_2 = open(path+'girlEngine.tgs', 'rb')
    sti_3 = open(path+'thinkingPatric.tgs', 'rb')
    sti_4 = open(path+'thinkingGirl.tgs', 'rb')
    sti_5 = open(path+'wowPatric.tgs', 'rb')
    bot.send_sticker(message.chat.id, random.choice([sti_4, sti_5, sti_3, sti_2, sti_1]))


@bot.callback_query_handler(func=lambda call: call.data in ['good', 'bad'])  # –ö–∞–∫ –¥–µ–ª–∞ ?
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':  # –û—Ç–≤–µ—Ç –Ω–∞ "—Ö–æ—Ä–æ—à–æ"
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':  # –û—Ç–≤–µ—Ç –Ω–∞ "–Ω–µ –æ—á–µ–Ω—å"
                bot.send_message(call.message.chat.id, '–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ, —è —É–≤–µ—Ä–µ–Ω ‚ù§Ô∏è\n'
                                                       '–ê —á—Ç–æ–±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≥—Ä—É—Å—Ç–∏—Ç—å - \n'
                                                       '–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞–º üìà')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=" –ê —Ç–≤–æ–∏?",
                                  reply_markup=None)  # –ö–∞–∫ –¥–µ–ª–∞ —É —é–∑–µ—Ä–∞ ?
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï "
                                                                                        "–£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11!1!11")

    except Exception as e:
        print(repr(e))


@bot.callback_query_handler(func=lambda call: call.data in ['about1', 'about2', 'about3', 'about4', 'about5', 'about6'])  # –û –Ω–∞—Å
def callback_inline_two(call):
    try:
        if call.message:
            if call.data == "about1":
                bot.send_message(call.message.chat.id,
                                 '–í –ù–ì–¢–£, –Ω–∞—Ä—è–¥—É —Å –¥—Ä—É–≥–∏–º–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞–º–∏, –±–æ–ª—å—à–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª—è–µ—Ç—Å—è –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—É—á–∞—é—â–∏—Ö—Å—è,\n'
                                 '—Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏–∏–º—á–∏–≤–æ—Å—Ç–∏ –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π —É –æ–±—É—á–∞—é—â–∏—Ö—Å—è.\n\n'
                                 '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –≤–∫–ª—é—á–µ–Ω–Ω–æ—Å—Ç—å –æ–±—É—á–∞—é—â–∏—Ö—Å—è –≤ –ø—Ä–æ–µ–∫—Ç–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞,\n'
                                 '–∞ —Ç–∞–∫–∂–µ –Ω–µ—Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n'
                                 '–ü–æ—ç—Ç–æ–º—É —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–µ–∫—Ç "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è "Projector" –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏–∏–º—á–∏–≤—ã—Ö –æ–±—É—á–∞—é—â–∏—Ö—Å—è" (–¥–∞–ª–µ–µ - Projector),\n'
                                 '–∫–æ—Ç–æ—Ä—ã–π —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ú–µ–∂–≤—É–∑–æ–≤—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è",\n'
                                 '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–Ω–æ–≥–æ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ–º —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –†–§.\n\n'
                                 '–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å Projector –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –∏ –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã –æ–±—É—á–∞—é—â–∏—Ö—Å—è,\n'
                                 '–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–± –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ –ø–æ–≤—ã—à–µ–Ω–∏—é —Å—Ç–µ–ø–µ–Ω–∏ –≤–æ—Å–ø—Ä–∏–∏–º—á–∏–≤–æ—Å—Ç–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n'
                                 '–ü—Ä–æ–µ–∫—Ç "Projector" ‚Äì –∫–æ–º–ø–ª–µ–∫—Å –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –æ–±—â–µ–π —Ü–µ–ª—å—é –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ–º—ã—Ö —Å–æ–≤–º–µ—Å—Ç–Ω–æ –≤ —Ü–µ–ª—è—Ö –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–±—â–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç–∏.\n'
                                 '–¶–µ–ª—å: –º–æ—Ç–∏–≤–∞—Ü–∏—è –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π –ø—Ä–æ–µ–∫—Ç–Ω–æ–π, –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±—É—á–∞—é—â–∏—Ö—Å—è; —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞.\n')

            elif call.data == 'about2':
                bot.send_message(call.message.chat.id, '–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤,\n'
                                                       '—Å –Ω–∞–º–∏ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å <u>—Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç</u>\n '
                                                       '–∏–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏ –¥–æ—Å—Ç–∏—á—å –ª—é–±—ã—Ö —Ü–µ–ª–µ–π,\n'
                                                       '–±—ã–ª–æ –±—ã –∂–µ–ª–∞–Ω–∏–µ!', parse_mode='html')
            elif call.data == 'about3':
                bot.send_message(call.message.chat.id, '2 –∫–æ—Ä–ø—É—Å, –∞—É–¥. None')
            elif call.data == 'about4':

                form_markup = types.InlineKeyboardMarkup(row_width=2)
                im1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –ù–∏–∫–∏—Ç–µ",
                                                 url='https://vk.com/id8970990')

                im2 = types.InlineKeyboardButton(text="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ –ü–î",
                                                 url='https://project-study.nstu.ru/project?id=612')
                form_markup.add(im1, im2)

                bot.send_message(call.message.chat.id,
                                 '–ù–∞–ø–∏—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ - <a href="https://vk.com/nikyats">–ù–∏–∫–∏—Ç–µ</a>\n'
                                 '–∏–ª–∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ <strong>—Å–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</strong>,\n'
                                 '–Ω–∞–π–¥–∏ –ø—Ä–æ–µ–∫—Ç –Ω–æ–º–µ—Ä 612 –∏ –ø–æ–¥–∞–π –∑–∞—è–≤–∫—É\n'
                                 '(–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ <a href="https://project-study.nstu.ru/project?id=612">—Å—é–¥–∞</a>)',
                                 parse_mode="html", reply_markup=form_markup)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–£–¥–∞—á–∏ !",
                                      reply_markup=None)

                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï !")
            elif call.data == 'about5':
                bot.send_message(call.message.chat.id,
                                 '–í–æ—Ç –Ω–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç—è—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!\n\n'
                                 '–°–∞–π—Ç: SOON\n'
                                 '–ù–∞—à–∞ <a href="https://vk.com/projector_neti">–≥—Ä—É–ø–ø–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ</a>\n'
                                 '–ú—ã –µ—Å—Ç—å <a href="https://instagram.com/projector_neti">–≤ Instagram</a>\n',
                                 parse_mode="html")
            elif call.data == 'about6':
                form_markup = types.InlineKeyboardMarkup(row_width=2)
                im1 = types.InlineKeyboardButton(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å/–ù–∞–ø–∏—Å–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é",
                                                 url='https://vk.com/id8970990')
                form_markup.add(im1)

                bot.send_message(call.message.chat.id, '–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n'
                                                       '–Ω–∞—à–µ–º—É –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –ø—Ä–æ–µ–∫—Ç–∞ üëá',
                                 parse_mode="html",
                                 reply_markup=form_markup)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–£–¥–∞—á–∏ !",
                                      reply_markup=None)

                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï !")

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å ‚ò∫Ô∏è",
                                  reply_markup=None)

            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–í—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π(–∞—è) !")

    except Exception as e:
        print(repr(e))


@bot.callback_query_handler(func=lambda call: call.data in ['good2', 'bad4'])  # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def callback_inline_three(call):
    try:
        if call.message:
            if call.data == 'good2':  # –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ
                bot.send_message(call.message.chat.id, "–¢–≤–æ—ë —á–∏—Å–ª–æ: " + str(random.randint(0, 100)))

            elif call.data == 'bad4':  # –ö–∞–∫ –¥–µ–ª–∞ ?
                an_markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
                item2 = types.InlineKeyboardButton('–ù–µ –æ—á–µ–Ω—å', callback_data='bad')
                an_markup.add(item1, item2)

                bot.send_message(call.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º(–∞) –∫–∞–∫ ?', reply_markup=an_markup)

            # Remove buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä üçÄ",
                                  reply_markup=None)
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11!1!11")

    except Exception as e:
        print(repr(e))


@bot.callback_query_handler(func=lambda call: call.data in ['one', 'two', 'three', 'fourth', 'five'])  # –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
def callback_inline_one(call):
    try:
        if call.message:
            if call.data == 'one':  # –ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                bot.send_message(call.message.chat.id,
                                 "–ò—Ç–∞–∫,<b>–±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b>:\n\n"  # –ó–¥–µ—Å—å –±—É–¥—É—Ç —Å—Å—ã–ª–∫–∏ –µ—â—ë
                                 "–§–æ—Ä—É–º ¬´–ë–∞–π–∫–∞–ª¬ª\n"
                                 "–ö–æ–Ω–∫—É—Ä—Å ¬´–¶–∏—Ñ—Ä–æ–≤–æ–π –≤–µ—Ç–µ—Ä¬ª\n"
                                 "PRONETI", parse_mode="html")
            elif call.data == 'two':  # –ü—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                bot.send_message(call.message.chat.id, "–í–æ—Ç —Å–ø–∏—Å–æ–∫ <b>–ø—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</b>:\n\n"
                                                       "–ú–ù–¢–ö\n"
                                                       "–°–µ–º–∏–Ω–∞—Ä—ã –ø–æ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
                                                       "–í—Å—Ç—Ä–µ—á–∞ —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π", parse_mode="html")
            elif call.data == 'three':

                form_markup = types.InlineKeyboardMarkup(row_width=3)
                im1 = types.InlineKeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É",
                                                 url='https://docs.google.com/forms/d/e/1FAIpQLSewfT5dQ0kF9cKOJqmTTKPEm9dSllFRAfxH3zTK2cnSNPwhGA/viewform')
                form_markup.add(im1)

                bot.send_message(call.message.chat.id, "–ü–æ –ø–æ–≤–æ–¥—É —ç—Ç–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è –Ω–∞–ø–∏—à–∏ "
                                                       "<u><a href='https://vk.com/ki1337ki'>–ò–ª—å–µ</a></u>\n"
                                                       "–ê —Ç–∞–∫–∂–µ, —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–π,\n"
                                                       "—Å —Ç–æ–±–æ–π –ª–∏—á–Ω–æ —Å–≤—è–∂–µ—Ç—Å—è –æ–¥–∏–Ω –∏–∑ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n–∏–ª–∏ "
                                                       "<u><a href='https://vk.com/nikyats'>–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞</a></u> :",
                                 parse_mode="html",
                                 reply_markup=form_markup)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–£–¥–∞—á–∏ —Å –∞–Ω–∫–µ—Ç–æ–π !",
                                      reply_markup=None)

                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï !")

            elif call.data == 'fourth':
                bot.send_message(call.message.chat.id,
                                 "–û—Ç–ª–∏—á–Ω–æ!\n–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—ã –º–æ–∂–µ—à—å"
                                 " <u><a href='https://project-study.nstu.ru'>—É–∑–Ω–∞—Ç—å –∑–¥–µ—Å—å</a></u> üëá",
                                 parse_mode="html")
            elif call.data == 'five':
                f_markup = types.InlineKeyboardMarkup(row_width=3)
                im1 = types.InlineKeyboardButton(text="–°–∞–π—Ç üì∂",
                                                 url='http://nauka-nso.ru/news/')
                f_markup.add(im1)

                bot.send_message(call.message.chat.id, "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å"
                                                       "<u><a href='http://nauka-nso.ru/news/'> –Ω–∞ —Å–∞–π—Ç–µ</a></u> üëá",
                                 parse_mode="html", reply_markup=f_markup)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–ù–∞–¥–µ—é—Å—å, —Ç—ã –Ω–∞–π–¥–µ—à—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–µ–±—è !",
                                      reply_markup=None)

                bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                          text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï !")

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å ‚ò∫Ô∏è",
                                  reply_markup=None)

            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–í—ã –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π(–∞—è) !")

    except Exception as e:
        print(repr(e))


@bot.message_handler(content_types=["text"])
def go_send_messages(message):
    if message.chat.type == 'private':
        if message.text == '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è üåè':

            keyboard = types.InlineKeyboardMarkup(row_width=1)
            itemboo = types.InlineKeyboardButton(text="–¢—ã—â –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Ç—ã —É–∂–µ –≤ Google ‚úîÔ∏è", url="https://www.google.ru")
            itemboo1 = types.InlineKeyboardButton('–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤', callback_data='good2')
            itemboo4 = types.InlineKeyboardButton("–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞ ? ü§î", callback_data='bad4')

            keyboard.add(itemboo, itemboo1, itemboo4)

            bot.send_message(message.chat.id,
                             "{0.first_name}, –æ–∫–µ–π, —Å–º–æ—Ç—Ä–∏, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ç—É—Ç:\n".format(message.from_user),
                             reply_markup=keyboard)

        elif message.text == "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üçî":
            one_markup = types.InlineKeyboardMarkup(row_width=1)
            ite1 = types.InlineKeyboardButton("–ë–ª–∏–∂–∞–π—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üåÖ", callback_data="one")
            ite2 = types.InlineKeyboardButton("–ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üóø", callback_data="two")
            ite3 = types.InlineKeyboardButton("–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ üí∏", callback_data="three")
            ite4 = types.InlineKeyboardButton("–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –ù–ì–¢–£ üèõ", callback_data="fourth")
            ite5 = types.InlineKeyboardButton("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ú–µ–∂–≤—É–∑–æ–≤—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ üèõ", callback_data="five")
            one_markup.add(ite1, ite2, ite3, ite4, ite5)
            bot.send_message(message.chat.id, "{0.first_name}, —É –Ω–∞—Å <u>–µ–∂–µ–º–µ—Å—è—á–Ω–æ</u> –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ "
                                              "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π,\n–º—ã –ø–æ—Å—Ç–∞—Ä–∞–ª–∏—Å—å —Ä–∞–∑–±–∏—Ç—å –∏—Ö –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ:".format(
                message.from_user), parse_mode="html", reply_markup=one_markup)

        elif message.text == '–û –Ω–∞—Å üéØ':
            markup1 = types.InlineKeyboardMarkup(row_width=1)
            itembtn1 = types.InlineKeyboardButton('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üîã', callback_data='about1')
            itembtn2 = types.InlineKeyboardButton('–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è ‚ùì', callback_data='about2')
            itembtn3 = types.InlineKeyboardButton('–ì–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è ‚ùì', callback_data='about3')
            itembtn4 = types.InlineKeyboardButton('–ö–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É üìà', callback_data='about4')
            itembtn5 = types.InlineKeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã üìí', callback_data='about5')
            itembtn6 = types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –ø—Ä–æ–µ–∫—Ç–∞ üë§', callback_data='about6')
            markup1.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6)

            bot.send_message(message.chat.id,
                             "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –æ –ø—Ä–æ–µ–∫—Ç–µ  üß©\n"
                             "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ".format(message.from_user, bot.get_me()),
                             reply_markup=markup1)

        elif message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
            bot.send_message(message.chat.id, '–î–∞-–¥–∞, —è —Ç—É—Ç ')
        elif message.text.lower() == '–ø–æ–∫–∞':
            bye_Sti = open('C:/Users/user/PycharmProjects/My_Python/venv/Lib/site-packages/telebot/static/byeMorty.tgs',
                           'rb')
            hideBoard = types.ReplyKeyboardRemove()  # if sent as reply_markup, will hide the keyboard
            bot.send_message(message.chat.id, '–ù–∞–¥–µ—é—Å—å, —è –ø–æ–º–æ–≥ —Ç–µ–±–µ!\n–î–æ –≤—Å—Ç—Ä–µ—á–∏ üëãüèª', reply_markup=hideBoard)
            bot.send_sticker(message.chat.id, bye_Sti)
            exit()
        else:
            a = demoji.findall(message.text)
            if len(a) != 0:
                sti_1 = open(
                    path+'AnimatedSticker.tgs',
                    'rb')
                sti_2 = open(
                    path+'girlEngine.tgs',
                    'rb')
                sti_3 = open(
                    path+'thinkingPatric.tgs',
                    'rb')
                sti_4 = open(
                    path+'thinkingGirl.tgs',
                    'rb')
                sti_5 = open(
                    path+'wowPatric.tgs', 'rb')
                bot.send_sticker(message.chat.id, random.choice([sti_4, sti_5, sti_3, sti_2, sti_1]))
            else:
                bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è üåö')


# RUN
if __name__ == "__main__":
    try:
        bot.polling(none_stop=True)
    except ConnectionError as e:
        print('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ', e)
    except Exception as r:
        print("–ù–µ–ø—Ä–∏–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ", r)
    finally:
        print("–ó–¥–µ—Å—å –≤—Å—ë –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å")
